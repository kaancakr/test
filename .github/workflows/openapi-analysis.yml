name: OpenAPI Analysis (Workaround)

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.json'
      - '**/*.yaml'
      - '**/*.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.json'
      - '**/*.yaml'
      - '**/*.yml'
  workflow_dispatch:

jobs:
  analyze-openapi:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests PyYAML openapi-spec-validator
        
    - name: Download analyzer script
      run: |
        curl -o analyzer.py https://raw.githubusercontent.com/ApyGuard/openapi_analyzer/main/analyzer.py
        
    - name: Run OpenAPI Analysis
      id: analyze
      run: |
        python analyzer.py test-swagger.json > analysis-results.json
        echo "analysis<<EOF" >> $GITHUB_OUTPUT
        cat analysis-results.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Extract individual values for outputs
        is_valid=$(python -c "import json; data=json.load(open('analysis-results.json')); print(data.get('is_valid', False))")
        suggestions_count=$(python -c "import json; data=json.load(open('analysis-results.json')); print(len(data.get('suggestions', [])))")
        operations_count=$(python -c "import json; data=json.load(open('analysis-results.json')); print(data.get('summary', {}).get('operations_count', 0))")
        paths_count=$(python -c "import json; data=json.load(open('analysis-results.json')); print(data.get('summary', {}).get('paths_count', 0))")
        schemas_count=$(python -c "import json; data=json.load(open('analysis-results.json')); print(data.get('summary', {}).get('schemas_count', 0))")
        
        echo "is_valid=$is_valid" >> $GITHUB_OUTPUT
        echo "suggestions_count=$suggestions_count" >> $GITHUB_OUTPUT
        echo "operations_count=$operations_count" >> $GITHUB_OUTPUT
        echo "paths_count=$paths_count" >> $GITHUB_OUTPUT
        echo "schemas_count=$schemas_count" >> $GITHUB_OUTPUT
        
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: openapi-analysis-results
        path: analysis-results.json
        retention-days: 30
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const analysis = JSON.parse('${{ steps.analyze.outputs.analysis }}');
          const comment = `## 🔍 OpenAPI Analysis Results
          
          **Valid**: ${analysis.is_valid ? '✅' : '❌'}
          **Suggestions**: ${analysis.suggestions ? analysis.suggestions.length : 0}
          **Operations**: ${analysis.summary ? analysis.summary.operations_count : 0}
          **Paths**: ${analysis.summary ? analysis.summary.paths_count : 0}
          **Schemas**: ${analysis.summary ? analysis.summary.schemas_count : 0}
          
          ${analysis.suggestions && analysis.suggestions.length > 0 ? 
            `### 📋 Top Suggestions:\n\n${analysis.suggestions.slice(0, 5).map(s => `- ${s}`).join('\n')}` : 
            '### ✅ No suggestions found! Your OpenAPI specification looks great! 🎉'
          }
          
          Detailed results are available in the workflow artifacts.`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
